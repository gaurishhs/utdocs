[{"Title":"Components","Url":"components#components","Content":""},{"Title":"Alert","Url":"components#alert","Content":""},{"Title":"Usage","Url":"components#usage","Content":""},{"Title":"Props","Url":"components#props","Content":""},{"Title":"Example","Url":"components#example","Content":"   "},{"Title":"Configuration","Url":"config#configuration","Content":""},{"Title":"Options","Url":"config#options","Content":""},{"Title":"Site Name","Url":"config#site-name","Content":""},{"Title":"Disabling Default Search","Url":"config#disabling-default-search","Content":""},{"Title":"Theme ID","Url":"config#theme-id","Content":""},{"Title":"Theme Directory","Url":"config#theme-directory","Content":""},{"Title":"Custom Head Tags","Url":"config#custom-head-tags","Content":""},{"Title":"Custom Font","Url":"config#custom-font","Content":""},{"Title":"Custom CSS","Url":"config#custom-css","Content":""},{"Title":"Introduction","Url":"/#introduction","Content":"UTDocs is a powerful clean documentation generator written in Golang."},{"Title":"Features","Url":"/#features","Content":""},{"Title":"Installation","Url":"/#installation","Content":""},{"Title":"Usage","Url":"/#usage","Content":""},{"Title":"Create a new project","Url":"/#create-a-new-project","Content":""},{"Title":"Start the development server","Url":"/#start-the-development-server","Content":""},{"Title":"Build the static site","Url":"/#build-the-static-site","Content":""},{"Title":"Themeing","Url":"themeing#themeing","Content":"Themes are built using Go's templating sytem. You can check out the source code for the default theme here, which should give you a start into making your own theme.To allow UTDocs to recognize, you need a manifest at the theme directory root called theme.ini:The only properties that are mandatory is the Name and Version key. The highlighter will assume the default settings shown above, and all other information will default to empty.Cutedoc uses Goldmark for Markdown processing, which internally uses chroma as a code highlighter. An overview of available highlighting styles can be found here."},{"Title":"Customizing the theme","Url":"themeing#customizing-the-theme","Content":""},{"Title":"Directory Structure","Url":"themeing#directory-structure","Content":"The theme directory should have the following structure:Take a look at the default theme for reference."},{"Title":"Templates","Url":"themeing#templates","Content":"The index.html and 404.html files are the templates for the home page and the 404 page respectively. The main.html file is the template for the main page, which is the page that contains the documentation. The body.html file is the template for the body of the page, which is the part that contains the documentation.The main.html and body.html files are the only files that are required. The other files are optional."},{"Title":"Components","Url":"components","Content":"Components  List of components in the default theme  Alert  Alerts are used to display important information to the user.  Usage  The alert component can be used as follows:  \u0026lt;ut-alert type=\u0026#34;info\u0026#34; message=\u0026#34;This is an info alert\u0026#34;\u0026gt;\u0026lt;/ut-alert\u0026gt; Props  type - The type of the alert. Can be one of info, success, warn, error. message - The message to display in the alert.  Example     "},{"Title":"Configuration","Url":"config","Content":"Configuration  UTDocs uses INI file format for configuration. The configuration file is located at utdocs.ini in the root of the project.  Options Site Name  The name of site. Used in the title of the HTML pages to generate titles such as Home - My Site.  [Site] Name = My Site Disabling Default Search  By default, UTDocs comes with a built-in full text search functionality. If you want to disable it, you can do so by setting the DefaultSearch option to false.  [Site] DefaultSearch = false Theme ID  The ID of the theme to use. The default theme is default. You can find more themes in the Themeing section.  [Site] Theme = default Theme Directory  The directory where the theme is located. By default, UTDocs will look for the theme in the themes directory in the root of the project.  export THEME_DIR=/path/to/theme Custom Head Tags  You can add custom tags to the \u0026lt;head\u0026gt; of the HTML pages by adding them to the HeadTags option.  [Site] HeadTags = \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://example.com/style.css\u0026#34;\u0026gt; Custom Font  You can add a custom font to the site by adding the link to the CustomFont option.   [Site] CustomFont = Roboto Custom CSS "},{"Title":"Introduction","Url":".","Content":"Introduction UTDocs is a powerful clean documentation generator written in Golang. Features  Write documentation using Markdown Outputs static HTML that can be hosted anywhere (Github Pages, S3, etc) Supports syntax highlighting and emojis Easily extensible with custom themes using Go templates In-built Search functionality (powered by Fuse.js)  Installation  Head over to the releases page and download the latest binary for your platform.  Usage Create a new project git clone -b starter https://github.com/gaurishhs/utdocs.git Start the development server utdocs serve Build the static site utdocs generate "},{"Title":"Themeing","Url":"themeing","Content":"Themeing Themes are built using Go\u0026#39;s templating sytem. You can check out the source code for the default theme here, which should give you a start into making your own theme. To allow UTDocs to recognize, you need a manifest at the theme directory root called theme.ini: [Theme] Name = My UTDocs Theme Description = A new theme for UTDocs Repository = https://github.com/gaurishhs/my-theme Version = 1.0.0 Author = You License = MIT  [Highlighting] Style = bw LineNumbers = false The only properties that are mandatory is the Name and Version key. The highlighter will assume the default settings shown above, and all other information will default to empty. Cutedoc uses Goldmark for Markdown processing, which internally uses chroma as a code highlighter. An overview of available highlighting styles can be found here. Customizing the theme Directory Structure The theme directory should have the following structure: . ├── themes │   └── my-theme (theme id) │       ├── js │       │   └── main.js │       ├── css │       │   └── main.css │       ├── index.html │       ├── 404.html │       ├── nav.html │       ├── main.html │       ├── body.html │       ├── theme.ini (Required) Take a look at the default theme for reference. Templates The index.html and 404.html files are the templates for the home page and the 404 page respectively. The main.html file is the template for the main page, which is the page that contains the documentation. The body.html file is the template for the body of the page, which is the part that contains the documentation. The main.html and body.html files are the only files that are required. The other files are optional. "}]